AWSTemplateFormatVersion: '2010-09-09'
Description: OpenVPN Stack

Parameters:
  OpenVPNPort:
    Type: Number
    Default: 1194
    Description: OpenVPN UDP port
  SSHKeyName:
    Type: AWS::EC2::KeyPair::KeyName
    Default: MyImac
    Description: SSH Key for the OpenVPN Instance
    ConstraintDescription: Must be the name of an existing EC2 KeyPair.
  OpenVPNInstanceType:
    Type: String
    Default: t2.micro
    Description: OpenVPN Instance Type

##
## Fn::ImportValue:
##  !Sub "${NetworkStack}-SubnetID"
Mappings:
  RegionMap:
    us-east-1:
      "AMALINUX" : "ami-97785bed" # Amazon Linux AMI 2017.09
    us-east-2:
      "AMALINUX" : "ami-f63b1193" # Amazon Linux AMI 2017.09
    us-west-1:
      "AMALINUX" : "ami-f2d3638a" # Amazon Linux AMI 2017.09
    eu-west-1:
      "AMALINUX" : "ami-d834aba1" # Amazon Linux AMI 2017.09

Resources:
  myEIP:
    Type: "AWS::EC2::EIP"
    Properties:
      Domain: !ImportValue OpenVPNVPC

  AssociateEIPtoNIC:
    Type: AWS::EC2::EIPAssociation
    Properties:
      AllocationId: !GetAtt myEIP.AllocationId
      NetworkInterfaceId: !Ref myNic
  myNic:
    Type: AWS::EC2::NetworkInterface
    Properties:
      SubnetId: !ImportValue OpenVPNPublicSubnetA
      Description: Network Interface for OpenVpn Server Image Builder
      GroupSet:
      - !ImportValue OpenVPNInstanceSG
      SourceDestCheck: true

  EC2OpenVPNInstance:
    Type: "AWS::EC2::Instance"
    Properties:
      ImageId: !FindInMap [RegionMap, !Ref "AWS::Region", AMALINUX]
      InstanceType: !Ref OpenVPNInstanceType
      SourceDestCheck: false
      KeyName: !Ref SSHKeyName
      NetworkInterfaces:
        -
          NetworkInterfaceId: !Ref myNic
          DeviceIndex: 0
      IamInstanceProfile: !ImportValue OpenVpnEC2InstanceProfile
      Tags:
        -
          Key: Name
          Value: OpenVPN Image Build Server
      UserData:
          "Fn::Base64":
            !Sub |
              #!/bin/bash
              yum update -y aws-cfn-bootstrap
              yum -y update
              /opt/aws/bin/cfn-init -v --stack ${AWS::StackName} --resource EC2OpenVPNInstance --configsets easyrsa --region ${AWS::Region}
              /opt/aws/bin/cfn-signal -e $? --stack ${AWS::StackName} --resource EC2OpenVPNInstance --region ${AWS::Region}

    CreationPolicy:
      ResourceSignal:
        Count: "1"
        Timeout: PT10M
    Metadata:
      AWS::CloudFormation::Init:
        configSets:
          easyrsa:
            - "configure_cfn"
            - "install_software"
            - "generate_secrets"
            - "generate_client"
            - "configure_server"
            - "upload_files"
        configure_cfn:
          files:
            /etc/cfn/hooks.d/cfn-auto-reloader.conf:
              content: !Sub |
                [cfn-auto-reloader-hook]
                triggers=post.update
                path=Resources.EC2OpenVPNInstance.Metadata.AWS::CloudFormation::Init
                action=/opt/aws/bin/cfn-init -v --stack ${AWS::StackName} --resource EC2OpenVPNInstance --configsets easyrsa --region ${AWS::Region}
              mode: "000400"
              owner: root
              group: root
            /etc/cfn/cfn-hup.conf:
              content: !Sub |
                [main]
                stack=${AWS::StackId}
                region=${AWS::Region}
                verbose=true
                interval=1
              mode: "000400"
              owner: root
              group: root
          services:
            sysvinit:
              cfn-hup:
                enabled: "true"
                ensureRunning: "true"
                files:
                  - "/etc/cfn/cfn-hup.conf"
                  - "/etc/cfn/hooks.d/cfn-auto-reloader.conf"
        install_software:
          commands:
            01_install_software_download_easyrsa:
              cwd: "/tmp"
              command: "curl -O http://dl.fedoraproject.org/pub/archive/epel/5/i386/easy-rsa-2.2.2-1.el5.noarch.rpm"
            02_install_software_install_easyrsa:
              cwd: "/tmp"
              command: "yum --nogpgcheck localinstall -y easy-rsa-2.2.2-1.el5.noarch.rpm"
            03_install_software_download_openvpn:
              cwd: "/tmp"
              command: "curl -O https://rpmfind.net/linux/dag/redhat/el6/en/x86_64/dag/RPMS/openvpn-2.2.2-1.el6.rf.x86_64.rpm"
            04_install_software_install_openvpn:
              cwd: "/tmp"
              command: "yum --nogpgcheck localinstall -y openvpn-2.2.2-1.el6.rf.x86_64.rpm"
            05_install_software_copy_easyrsa:
              command: "cp -R /usr/share/easy-rsa/2.0 /opt/easy-rsa"
            
        generate_secrets:
          commands:
            01_generate_secrets_clean_keysdir:
              cwd: "/opt/easy-rsa"
              test: "test -e /opt/easy-rsa/clean-all"
              command: "source /opt/easy-rsa/vars;/opt/easy-rsa/clean-all"
            02_generate_secrets_update_build-ca:
              cwd: "/opt/easy-rsa"
              test: "test -e /opt/easy-rsa/build-ca"
              command: !Sub |
                sed -i 's/--interact//g' /opt/easy-rsa/build-ca
            03_generate_secrets_run_build-ca:
              cwd: "/opt/easy-rsa"
              test: "test -e /opt/easy-rsa/build-ca"
              command: "source /opt/easy-rsa/vars;/opt/easy-rsa/build-ca"
            04_generate_secrets_run_build-dh:
              cwd: "/opt/easy-rsa"
              test: "test -e /opt/easy-rsa/build-dh"
              command: "source /opt/easy-rsa/vars;/opt/easy-rsa/build-dh"
            05_generate_secrets_update_build-key-server:
              cwd: "/opt/easy-rsa"
              test: "test -e /opt/easy-rsa/build-key-server"
              command: !Sub |
                sed -i 's/--interact//g' /opt/easy-rsa/build-key-server
            06_generate_secrets_run_build-key-server:
              cwd: "/opt/easy-rsa"
              test: "test -e /opt/easy-rsa/build-key-server"
              command: "source /opt/easy-rsa/vars;/opt/easy-rsa/build-key-server server"
            07_generate_secrets_statictlssecret:
              cwd: "/opt/easy-rsa/keys"
              command: "openvpn --genkey --secret statictlssecret.key"

        generate_client:
          files:
            /opt/easy-rsa/openvpn_client.conf:
              content:
               Fn::Sub:
                 - |
                   client
                   port ${OpenVPNPort}
                   dev tun
                   proto udp
                   tls-client
                   ca ca.crt
                   cert clientuser.crt
                   key clientuser.key
                   tls-auth statictlssecret.key 1
                   key-direction 1
                   cipher AES-256-CBC
                   resolv-retry infinite
                   nobind
                   persist-key
                   persist-tun
                   ns-cert-type server
                   comp-lzo
                   verb 3
                   remote ${EIP} ${OpenVPNPort}
                 - { EIP: !ImportValue OpenVpnVpcElasticIP
                   }
              mode: "000700"
              owner: root
              group: root
            /opt/easy-rsa/gen_ovpn_profile.sh:
              content: !Sub |
                (cat /opt/easy-rsa/openvpn_client.conf
                echo '<key>'
                cat keys/clientuser.key
                echo '</key>'
                echo '<cert>'
                cat keys/clientuser.crt
                echo '</cert>'
                echo '<ca>'
                cat keys/ca.crt
                echo '</ca>'
                ) > /opt/easy-rsa/keys/openvpn_clientuser.ovpn
              mode: "000700"
              owner: root
              group: root
          commands:
            01_generate_client_update_build-key:
              cwd: "/opt/easy-rsa"
              test: "test -e /opt/easy-rsa/build-key"
              command: !Sub |
                sed -i 's/--interact//g' /opt/easy-rsa/build-key
            02_generate_client_run_build-key:
              cwd: "/opt/easy-rsa"
              test: "test -e /opt/easy-rsa/build-key"
              command: "source /opt/easy-rsa/vars;/opt/easy-rsa/build-key clientuser"
            03_generate_client_generate_ovpn_profile:
              cwd: "/opt/easy-rsa"
              test: "test -e /opt/easy-rsa/gen_ovpn_profile.sh"
              command: "/opt/easy-rsa/gen_ovpn_profile.sh"
        configure_server:
          files:
            /opt/openvpn/server.conf:
              content: !Sub |
                port ${OpenVPNPort}
                mode server
                tls-server
                proto udp
                dev tun
                server 172.16.0.0 255.255.252.0
                ca /opt/easy-rsa/keys/ca.crt
                cert /opt/easy-rsa/keys/server.crt
                key /opt/easy-rsa/keys/server.key
                dh /opt/easy-rsa/keys/dh2048.pem
                push "route 10.0.0.0 255.255.255.0"
                tls-auth /opt/easy-rsa/keys/statictlssecret.key 0
                cipher AES-256-CBC
                ifconfig-pool-persist ipp.txt
                keepalive 10 120
                ping-timer-rem
                comp-lzo
                persist-key
                persist-tun
                status openvpn-status.log
                log-append /var/log/openvpn.log
                verb 3
                max-clients 100
                user nobody
                group nobody
                crl-verify /etc/openvpn/keys/crl.pem
              mode: "000644"
              owner: "root"
              group: "root"
          commands:
            01_configure_server_sysctl_ipforward:
              command: !Sub |
                sed -i 's/net.ipv4.ip_forward.=.0/net.ipv4.ip_forward = 1/' /etc/sysctl.conf
            02_configure_server_sysctl_reload:
              command: "sysctl -p"
            03_configure_server_iptables_nat:
              command: "iptables -t nat -A POSTROUTING -s 172.16.0.0/22 -o eth0 -j MASQUERADE"
            04_configure_server_update_config:
              command: "cp -rf /opt/openvpn/server.conf /etc/openvpn/server.conf"
            05_configure_server_openvpn_start:
              command: "service openvpn start"
            06_configure_server_openvpn_startup:
              command: "chkconfig --level 35 openvpn on"

        upload_files:
          commands:
            01_upload_files_zipfiles:
                cwd: "/opt/easy-rsa/keys"
                command: "zip openVPNClientFiles.zip ca.crt statictlssecret.key clientuser.key clientuser.crt openvpn_clientuser.ovpn"
            02_upload_files_s3cp_openVPNClientFiles:
              cwd: "/opt/easy-rsa/keys"
              command:
                Fn::Sub:
                  - |
                    aws s3 cp openVPNClientFiles.zip s3://${S3Bucket}/client/openVPNClientFiles.zip
                  - {
                     S3Bucket: !ImportValue OpenVpnConfigDownloadBucket
                    }
            03_upload_files_s3cp_cfn_init_log:
              cwd: "/var/log"
              test: "test -e /var/log/cfn-init.log"
              command:
                Fn::Sub:
                  - |
                    aws s3 cp /var/log/cfn-init.log s3://${S3Bucket}/log/genSecrets_cfn-init.log
                  - {
                     S3Bucket: !ImportValue OpenVpnConfigDownloadBucket
                    }