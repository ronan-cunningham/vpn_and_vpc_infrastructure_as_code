1) ### Oven VPN Vpc# ###
DIR: 001_vpn
Set Parameter:
- ConfigDownloadBucket

aws cloudformation  create-stack --stack-name OpenVpnVpc --template-body file://openvpn-vpc.yaml --capabilities CAPABILITY_NAMED_IAM
aws cloudformation  update-stack --stack-name OpenVpnVpc --template-body file://openvpn-vpc.yaml --capabilities CAPABILITY_NAMED_IAM

System Manger Commands
----------------------
DIR: SSM

Set Parameter:
- ConfigDownloadBucket
1) aws ssm create-document --content file://add_user_to_vpn.json  --name "AddUserToVPN" --document-type "Command" 
2) aws ssm create-document --content file://remove_user_from_vpn.json  --name "RemoveUserFromVPN" --document-type "Command" 


2) ### DEV VPC- Optional ###
aws cloudformation  create-stack --stack-name DevVpc --template-body file://dev-vpc.yaml --capabilities CAPABILITY_NAMED_IAM
aws cloudformation  create-stack --stack-name DevVpcPeering --template-body file://peer-dev-with-open-vpn.yaml --capabilities CAPABILITY_NAMED_IAM
aws cloudformation  create-stack --stack-name DevVpcPrivateNACL --template-body file://dev-vpc-private-nacl.yaml --capabilities CAPABILITY_NAMED_IAM
aws cloudformation  create-stack --stack-name DevVpcPublicNACL --template-body file://dev-vpc-public-nacl.yaml --capabilities CAPABILITY_NAMED_IAM


3) ### Build VPN Image ###
aws cloudformation  create-stack --stack-name OpenVpnImageBuilder --template-body file://openvpn-image-builder.yaml --capabilities CAPABILITY_IAM

- Logon to instance as ec2-user
- sudo su - root

3.1) Set the EFS system to mount each time the machine boots.
cp /etc/fstab /etc/fstab.bak
ElasticFS='fs-9e9d65d6.efs.us-east-1.amazonaws.com' - ## This should be set to the value of export 'OpenVpnVpcEFS' plus specific region
MountPoint='/etc/openvpn'
echo "${ElasticFS}:/ ${MountPoint} nfs4 nfsvers=4.1,rsize=1048576,wsize=1048576,hard,timeo=600,retrans=2,_netdev 0 0" >> /etc/fstab

3.2) Set OpenVPN config settings and start options each time machine boots.

crontab -e

Add the following entries:

@reboot sudo iptables -t nat -A POSTROUTING -s 172.16.0.0/22 -o eth0 -j MASQUERADE
@reboot sudo sysctl -p
@reboot sudo service openvpn start
@reboot sudo chkconfig openvpn on
@reboot sudo touch /tmp/rebooted.txt

2.3) Create an ami from the instance
2.4) Destroy stack OpenVpnImageBuilder


4) ### VPN AutoScaling Group ###
DIR: 001_vpn
Set Parameters:
- AMI
- SSHKeyName

aws cloudformation  create-stack --stack-name OpenVpnAsg --template-body file://openvpn-asg.yaml --capabilities CAPABILITY_IAM

crl-verify /etc/openvpn/crl.pem


