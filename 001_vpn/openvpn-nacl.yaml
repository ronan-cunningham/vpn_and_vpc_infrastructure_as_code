AWSTemplateFormatVersion: '2010-09-09'
Description: OpenVPN Stack

Parameters:
  SourceCidrBlock:
    Type: String
    Default: 86.133.16.132/32 # ** MUST NOT OVERLAP WITH VpcCidrBlock **
    MinLength: '9'
    MaxLength: '18'
    Description: CidrBlock for incoming office connection
    AllowedPattern: "(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})/(\\d{1,2})"
    ConstraintDescription: must be a valid IP CIDR range of the form x.x.x.x/x.
  DevVPcCidrBlock:
    Type: String
    Default: 10.1.0.0/16 #10.1.0.0 - 10.1.255.255
    MinLength: '9'
    MaxLength: '18'
    Description: CidrBlock for incoming office connection
    AllowedPattern: "(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})/(\\d{1,2})"
    ConstraintDescription: must be a valid IP CIDR range of the form x.x.x.x/x.

Resources:
  OpenVpnVpcNACL:
    Type: "AWS::EC2::NetworkAcl"
    Properties:
      VpcId:  !ImportValue OpenVPNVPC
      Tags:
        - Key: Name
          Value: OpenVpnVpcNACL
        - Key: Stack
          Value: !Ref AWS::StackId
#
# HOME NETWORK
#
        
# Allows inbound SSH traffic to the subnet from Internet.
  SshInFromInternet:
    Type: AWS::EC2::NetworkAclEntry
    Properties:
      NetworkAclId: !Ref OpenVpnVpcNACL
      RuleNumber: '100'
      Protocol: "6"
      RuleAction: allow
      CidrBlock: !Ref SourceCidrBlock
      PortRange:
        From: '22'
        To: '22'      
        
# Allows inbound UDP traffic to the subnet from Internet.
  UDPInFromInternet:
    Type: AWS::EC2::NetworkAclEntry
    Properties:
      NetworkAclId: !Ref OpenVpnVpcNACL
      RuleNumber: '110'
      Protocol: "17"
      RuleAction: allow
      CidrBlock: !Ref SourceCidrBlock
      PortRange:
        From: '1194'
        To: '1194'    


# Allows inbound return traffic from requests originating from Internet.
  AllInboundFromInternet:
    Type: AWS::EC2::NetworkAclEntry
    Properties:
      NetworkAclId: !Ref OpenVpnVpcNACL
      RuleNumber: '130'
      Protocol: "6"
      RuleAction: allow
      CidrBlock: !Ref SourceCidrBlock
      PortRange:
        From: '32768'
        To: '65535'    

# Allows all outbound traffic from the subnets to Internet.
  AllOutboundToInternet:
    Type: AWS::EC2::NetworkAclEntry
    Properties:
      Egress: 'true'
      NetworkAclId: !Ref OpenVpnVpcNACL
      RuleNumber: '100'
      Protocol: "-1"
      RuleAction: allow
      Egress: 'true'
      CidrBlock: !Ref SourceCidrBlock

#
# DEV VPC
#

# Allows all outbound traffic from the subnet to dev VPC.
  AllOutboundToDevVpc:
    Type: AWS::EC2::NetworkAclEntry
    Properties:
      Egress: 'true'
      NetworkAclId: !Ref OpenVpnVpcNACL
      RuleNumber: '110'
      Protocol: "-1"
      RuleAction: allow
      Egress: 'true'
      CidrBlock: !Ref DevVPcCidrBlock
      
# Allows inbound return traffic from requests originating from Dev VPC.
  AllInboundFromDevVpc:
    Type: AWS::EC2::NetworkAclEntry
    Properties:
      NetworkAclId: !Ref OpenVpnVpcNACL
      RuleNumber: '140'
      Protocol: "6"
      RuleAction: allow
      CidrBlock: !Ref DevVPcCidrBlock
      PortRange:
        From: '32768'
        To: '65535'    

  SubnetANetworkAclAssociation:
    Type: AWS::EC2::SubnetNetworkAclAssociation
    Properties:
      SubnetId: !ImportValue OpenVPNPublicSubnetA
      NetworkAclId: !Ref OpenVpnVpcNACL
      
  SubnetBNetworkAclAssociation: 
    Type: AWS::EC2::SubnetNetworkAclAssociation
    Properties:
      SubnetId: !ImportValue OpenVPNPublicSubnetB
      NetworkAclId: !Ref OpenVpnVpcNACL